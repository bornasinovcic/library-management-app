@model LibraryManagementApp.Model.Book

@{
    ViewData["Title"] = "Edit book";
    ViewData["SubmitButtonText"] = "Save edit";
    var selectedAuthorIds = Model.AuthorBooks?.Select(ab => ab.AuthorId).ToList() ?? new List<int>();
}

<h1>@ViewData["Title"]</h1>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">List of books</a></li>
        <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
    </ol>
</nav>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <input type="hidden" asp-for="Id" />
            @await Html.PartialAsync("_BookForm")
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize selected books from the model
            var selectedAuthors = @Html.Raw(Json.Serialize(selectedAuthorIds));

            // Set selected books in the select element
            $('select[multiple]').val(selectedAuthors);

            // Store selected books in an array on change
            $('select[multiple]').on('change', function () {
                selectedAuthors = $(this).val() || [];
            });

            // Ensure selected books are submitted with the form
            $('form').submit(function () {
                var form = $(this);
                var authorInputs = '';

                for (var i = 0; i < selectedAuthors.length; i++) {
                    authorInputs += '<input type="hidden" name="selectedAuthors" value="' + selectedAuthors[i] + '" />';
                }

                form.append(authorInputs);
            });
        });
    </script>
}
